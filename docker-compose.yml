version: "3.3"
services:
  updatejson:
    image: ghcr.io/cfwidget/updatejson:${TAG}
    restart: always
    depends_on:
      - database
    environment:
      DB_USER: "${DB_USER}"
      DB_PASS_FILE: "/run/secrets/updatejson_db_pw"
      DB_HOST: "${DB_HOST}"
      DB_DATABASE: "${DB_DATABASE}"
      GIN_MODE: "${GIN_MODE}"
      DB_MODE: "${DB_MODE}"
      CORE_KEY_FILE: "/run/secrets/curse_key"
      CACHE_TTL: "${CACHE_TTL}"
      HOST: "${HOST}"
      ELASTIC_APM_SERVER_URL: "${ELASTIC_APM_SERVER_URL}"
      ELASTIC_APM_SERVICE_NAME: "${ELASTIC_APM_SERVICE_NAME}"
      ELASTIC_APM_ENVIRONMENT: "${ELASTIC_APM_ENVIRONMENT}"
      ELASTIC_APM_VERIFY_SERVER_CERT: "${ELASTIC_APM_VERIFY_SERVER_CERT}"
    secrets:
      - curse_key
      - updatejson_db_pw
    networks:
      - default
      - ingress_default
      - elastic
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.${SERVICE_NAME}.rule=HostRegexp(`${HOST}`,`{subdomain:[a-z0-9]+}.${HOST}`)"
        - "traefik.http.routers.${SERVICE_NAME}.entrypoints=websecure"
        - "traefik.http.routers.${SERVICE_NAME}.tls.certresolver=myresolver"
        - "traefik.http.services.${SERVICE_NAME}.loadbalancer.server.port=8080"
        - "traefik.http.routers.${SERVICE_NAME}.tls.domains[0].main=${HOST}"
        - "traefik.http.routers.${SERVICE_NAME}.tls.domains[0].sans=*.${HOST}"
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
        max-file: "5"
  database:
    image: mariadb
    restart: always
    environment:
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD_FILE: "/run/secrets/updatejson_db_pw"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
    secrets:
      - updatejson_db_pw
    volumes:
      - "dbdata:/var/lib/mysql"
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
        max-file: "5"

secrets:
  updatejson_db_pw:
    external: true
  curse_key:
    external: true

volumes:
  dbdata:

networks:
  ingress_default:
    external: true
  elastic:
    external: true