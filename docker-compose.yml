version: "3.3"
services:
  updatejson:
    image: ghcr.io/lordralex/updatejson
    restart: always
    depends_on:
      - database
      - memcache
    environment:
      DB_USER: updatejson
      DB_PASS: updatejson
      DB_HOST: database
      DB_DATABASE: widget
      GIN_MODE: release
      DB_MODE: release
      MEMCACHE_SERVERS: memcache
      CORE_KEY: "${CORE_KEY}"
      CACHE_TTL: 1h
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.updatejson.rule=Host(`${HOST}`)"
      - "traefik.http.routers.updatejson.entrypoints=websecure"
      - "traefik.http.routers.updatejson.tls.certresolver=myresolver"
     
  database:
    image: mariadb
    restart: always
    environment:
      MYSQL_USER: updatejson
      MYSQL_PASSWORD: updatejson
      MYSQL_DATABASE: widget
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
    volumes:
      - "dbdata:/var/lib/mysql"
      
  memcache:
    image: memcached
    restart: always
    command: ["-m", "64m"]

  traefik:
    image: "traefik:v2.5"
    depends_on:
      - updatejson
    command:
      #- "--log.level=debug"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL_ACME}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--accessLog.filePath=/logs/access.log"
    #labels:
    #  - "traefik.http.routers.dashboard.rule=Host(`${HOST}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
    #  - "traefik.http.routers.dashboard.service=api@internal"
    #  - "traefik.http.routers.dashboard.middlewares=auth"
    #  - "traefik.http.middlewares.auth.basicauth.users=${DASH_USER}:${DASH_PASS}"
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik:/letsencrypt"
      - "logs:/logs"

volumes:
  dbdata:
  traefik:
  logs:
